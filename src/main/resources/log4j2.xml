<?xml version="1.0" encoding="UTF-8"?>
<!-- log4j2使用说明：
使用方式如下：
private static final Logger logger = LogManager.getLogger(实际类名.class.getName());

2、日志说明：
（1）请根据实际情况配置各项参数
（2）需要注意日志文件备份数和日志文件大小，注意预留目录空间
（3）实际部署的时候backupFilePatch变量需要修改成linux目录
 -->
<configuration status="error">
    <Properties>
        <Property name="fileName">show.log</Property>
        <Property name="backupFilePatch">c:/log/</Property>
      </Properties>
    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
             <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY" />
            <!--这个都知道是输出日志的格式-->
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n" />
        </Console>
        
        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
         <RollingFile name="RollingFile" fileName="${backupFilePatch}${fileName}"
            filePattern="${backupFilePatch}$${date:yyyy-MM}/app-%d{yyyyMMddHHmmssSSS}.log.gz">
            <PatternLayout
                pattern="%d{yyyy.MM.dd 'at' HH:mm:ss.SSS z} %-5level %class{36} %L %M - %msg%xEx%n" />
            
            <!-- 日志文件大小 -->
            <SizeBasedTriggeringPolicy size="20MB" /> 
            <!-- 最多保留文件数 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile> 
        
        <!-- 每天的日志单独分开 -->
        <RollingFile name="DailyLog" fileName="c:/log/analysis.log"  filePattern="c:/log/analysis_%d{yyyy-MM-dd}.log" >       
            <!-- 输出格式 -->    
            <PatternLayout pattern="%d{yyyy.MM.dd 'at' HH:mm:ss.SSS z} %-5level %class{36} %L %M - %msg%xEx%n" />
            <Policies>    
            <!-- 每1天更新一次，此处查阅网上和官方示例中，都是以小时出现，我测试是以天为单位。（官方文档中说明按item类型是否是小时，但没找到在哪里设置item类型）另有其他各类型策略，请参阅官方文档 -->   
<!-- TimeBasedTriggeringPolicy需要和filePattern配套使用，由于filePattern配置的时间最小粒度是dd天，所以表示每一天新建一个文件保存日志。SizeBasedTriggeringPolicy表示当文件大小大于指定size时，生成新的文件保存日志。 -->   
                <TimeBasedTriggeringPolicy modulate="true" interval="1" />    
                <!-- 此处为每个文件大小策略限制，使用它一般会在文件中filePattern采用%i模式 -->    
                <!-- <SizeBasedTriggeringPolicy size="128KB" /> -->    
            </Policies>    
            <!-- 最多备份30天以内的日志，此处为策略限制，Delete中可以按自己需要用正则表达式编写 -->    
        <!-- DefaultRolloverStrategy字段中加入max=“30”经测试是配合SizeBasedTriggeringPolicy限制%i的存在数量，并没有发现是网上流传的是最多保存多少个文件的限制，也或许是我写的有问题 -->    
            <DefaultRolloverStrategy>    
	            <Delete basePath="c:/log" maxDepth="1">    
	                     <IfFileName glob="analysis_*.log" />    
	                     <IfLastModified age="30d" />    
	            </Delete>    
            </DefaultRolloverStrategy>    
        </RollingFile>    
    </appenders>
    
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--建立一个默认的root的logger 这里的name要添加类的全限定名  additivity为false的时候不继承root（不执行root的配置）要想多产生几个文件就多配置几个--> 
        <Logger name="cn.geekview.analysisSystem.controller.AnalysisController" level="info" additivity="true">
            <AppenderRef ref="DailyLog" />
        </Logger>
        <Logger name="cn.geekview.analysisSystem.controller.ShowController" level="info" additivity="true">
            <AppenderRef ref="RollingFile" />
        </Logger>
        <Root level="trace">
            <AppenderRef ref="Console" />
        </Root>
    </loggers>
</configuration>